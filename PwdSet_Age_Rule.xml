<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="PwdSet_Age Rule" type="LinkAttribute">
  <Description>This rule is used when promoting account attributes from Links during aggregation.</Description>
  <Signature returnType="Object">
    <Inputs>
      <Argument name="log" type="org.apache.commons.logging.Log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context" type="sailpoint.api.SailPointContext">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="environment">
        <Description>
          The optional arguments passed from the task executor, if the rule is running within a task.
        </Description>
      </Argument>
      <Argument name="link">
        <Description>
          The Link whose attribute is being promoted.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="value">
        <Description>
          An Object to be used as the attribute value.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>
  import java.text.SimpleDateFormat;
  import java.util.Calendar;
  import java.util.Date;
  import java.util.Map;
  import sailpoint.object.Link;
  import sailpoint.object.Custom;
  import sailpoint.api.SailPointContext;


  int numberOfDays=0;
  String noofDays ="";
  String pwdset ="";
  log.error("inside global pwdtrigger rule");
  //Link link = context.getObjectById(Link.class, "c0a8b5e08317126b818317ceca64008d");
  if(link != null)
  {
    String appName = link.getApplicationName();

    Custom custom = context.getObjectByName(Custom.class, "PwdTrigger");

    if(custom != null)
    {
      Map map = custom.getAttributes().getMap();
      if(map.size() &gt; 0)
      {
        pwdset = (String) map.get(appName); //pwdLastSet
      }
    }
    if(link.getAttribute(pwdset) != null)
    {
      log.error("inside If loop");
      String value = link.getAttribute(pwdset);
      log.error("value:" +value);

      SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");

      Date d1 = formatter.parse(value);

      log.error(formatter.format(d1));

      Date curDate = new Date();

      long diff = curDate.getTime() - d1.getTime();

      log.error("diff:" +diff);

      numberOfDays = (int)(diff/(1000*60*60*24));
      log.error("numberOfDays:" +numberOfDays);
      noofDays = numberOfDays.toString();
      log.error("noOfDays:" +noofDays);

    }
  }

  return noofDays;
  </Source>
</Rule>