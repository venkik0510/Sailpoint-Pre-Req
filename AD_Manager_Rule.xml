<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="AD Manager Rule" type="FieldValue">
  <Description>This rule can be used to generate a field value (eg - an account name) using data from the given Identity. If this rule is run in the context of a workflow step then the arguments passed into the step will also be available. Also, any field values that have been processed so far from the policy related to the Application/Role will be available.</Description>
  <Signature returnType="String"/>
  <Source>
  import java.*;
  import sailpoint.object.*;
  import sailpoint.object.Identity;
  import sailpoint.object.Application;
  import sailpoint.object.Link;
  import org.apache.log4j.Logger;
  import org.apache.log4j.Level;



  Logger log = Logger.getLogger("AD.manager.rule");
  log.setLevel(Level.DEBUG);
  log.error("-----------getManagerDN rule Starts------------");



  String appName = "Active_Directory";
  Identity manager = identity.getManager();
  if (manager != null ) {
    log.error("-----manager is --"+ manager);
    String managerDN = null;
    Application adApp = context.getObjectByName(Application.class, appName);
    List adAccounts = manager.getLinks(adApp);
    if ( adAccounts != null ) { 
      for ( int i=0; i&lt;adAccounts.size(); i++ ) {  
        Link adLink = (Link)adAccounts.get(i);
        Attributes attrs = adLink.getAttributes();
        managerDN = attrs.getString("distinguishedName");
        log.error("-----managerDN is --"+ managerDN); 
      }            return managerDN;     
    }            else
    {                log.error("-----managerLink not found --");       

     return null;
    }
  }
  </Source>
</Rule>