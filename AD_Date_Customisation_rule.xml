<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="AD Date Customisation rule" type="ResourceObjectCustomization">
  <Description>This rule is configured on the application and is called after the connector has build a ResourceObject from the native application data.

Initially designed for non-rule based connectors to add SPPrivileged flag to an object, but could be used to do any transformations.</Description>
  <Signature returnType="ResourceObject">
    <Inputs>
      <Argument name="log" type="org.apache.commons.logging.Log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context" type="sailpoint.api.SailPointContext">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="object">
        <Description>
          The ResourceObject built by the connector.
        </Description>
      </Argument>
      <Argument name="application">
        <Description>
          Application that references the connector.
        </Description>
      </Argument>
      <Argument name="connector">
        <Description>
          The connector object.
        </Description>
      </Argument>
      <Argument name="state">
        <Description>
          A Map containing state information.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="resourceObject">
        <Description>
          The updated resource object.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>/*import sailpoint.object.*;
import java.text.DateFormat;  
import java.text.SimpleDateFormat;


String pwdSet = object.getAttribute("pwdLastSet");

DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");

String NewPwdSet = formatter.format(pwdSet);

object.put("pwdLastSet", NewPwdSet);

return object;*/

import java.util.Date;
import java.text.SimpleDateFormat;

if(  object.get("pwdLastSet") != null){

  long adDate = Long.parseLong( (String) object.get("pwdLastSet") );
    long DIFF_NET_JAVA_FOR_DATE_AND_TIMES = 11644473600000L;
    long milliseconds = (adDate / 10000) - DIFF_NET_JAVA_FOR_DATE_AND_TIMES;
    Date lastLogonDate = new Date(milliseconds);

   String format1 = new SimpleDateFormat("dd/MM/yyyy HH:mma").format(lastLogonDate);

    object.put("pwdLastSet", format1);

}

return object;</Source>
</Rule>